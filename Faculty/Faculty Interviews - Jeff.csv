,,Ever,Lydia
How computing intersects with their field,How would you describe your field?,"I wish I knew, that'd make it alot easier; it actually is interseting, background is ocean engineering, phd project was building sensors, so I made soft pressure sensors to do header dynamics sensing, can we do something similiar to fish for our unmanned devices, that project combined motion engineering with matsci with electrical engineering, data processing, lots of things wrapped up into one, postdoc: marine related, working in lab with self organizing systems, robotic fish schooling, developing robot for that, did simulation work looking at algorithm things, playing around with how much info each agent would know (agent = one fish), need to know how far away other agents are, etc, can you reduce amount of info/ quality of info and still work?, anything in water = sensory defficit, here doing some robotic fish stuff, doing little multi jointed fish robots, this summer: both projects are in adaptavie tech space, one project: accessilbe storage devices, very much UOCD, but on steriods, very user oriented design, talking to ppl a lot, other project: power wheel chair, started mounting sensors on it, can now drive it remotely, first one is more defined because of toyota funding, other isn't because it's my start up money, I have multiple fields, also involved in teachacces, out in bay area for a week spending time looking at accessiblity in computer scientist education",
,How has computing intersected with previous jobs?,"done a lot of almost all of my computing has been in matlab, written don't wanna guess how many lines of matlab code, majority of it was in experimental hydrodynamics, collecing analog voltage measurements, whether they're force transducers or pressure sensors or anything else, I feel like i got a phd by looking at squiggly lines in matlab and convincing people it was meaningful, also did a lot of computer vision, got a big tank of water, shot reflective light at it (particle image velocimitry, PIV) it's basically you're generating a full vector field/ velocity field to represent your flow, so I've done quite a bit of processing very large datasets from taking these sorts of measurements and overlaying folis on top of flow and seeing what's happening, or like having pressure measurements, and a ton of other things and then trying to undrestanding how it all conects, most computing has been processing and representing experimental data, also done a fair amount of simulation work as well, did a lot of writing code there, written basic finite element sort of codes, based on a lot of same principles, done some work in that space, we always used matlab, implementation is deifferent, numerical techniques for solving probolens, also did swarming simulations at stanford at 2d for first pass; havent done much at Olin, some with neatos, but stuff we;re doing w/ auto wheelchair using ros and python, I haven't been too hands on with that, but at some point I'm gonna need to figure out what they're doing so I can talk about it and teach others, wanna learn python better, and there's a good chacne I'm gonna help out with comprobo, paul and I are both doing qea 2 and hes also doing comp robo and then I'm gonna help with comprobo hopefully, ",
,What background do you have with computing?,"fragmented: that would be the case for a lot of people, look back at undergrad, I had one class in programming that was half the semester in C++, half in matlab, don't think it was at all useful, in general teaching in context is better, especially when it comes to writing code, we were in a computer lab, we encoded a word document, it was fine, but don't remember much about C++, if i were to need it, I would be fine, but... yeah, matlab was a bit helpful, we used it in subsequent classes, we wrote a program to analyze predicted speed and power consumption of auto vehicle, and continued using matlab, almost all matlab I know, I learned by using it for tons of things, i mean ive had various classes that integrated matlab, especially some linear algebra related things, numerical fluids class did a lot with matlab, don't have much of a formal computer science background, mostly just when you're working with sensors you just end up with a ton of data and you gotta figure out what to do with it; somthing to be said for focusing on structure that is more universal because coding languages change and evolve",
,What did you learn in your education relating to computing?,"like I said, wouldn't say I've had much formal computing, even numerical fluids class -> you could do all of it by hands, but it was focused on algorithmic approach and numerical tools",
What computing they have students do in their classes that they teach,What classes do you teach/ have taught?,"ISIM, QEA 1, future: RoboSys, QEA 2, there's a decent chance I'll teach dynamics, or mechsolids, transport",
,How have you utilized computing in those classes (if applicable)?,"in ISIM, mostly data visualization, think we could've done a better job of structuring it, in previous year there was matlab in modsim, not case this year, in QEA there was more emphasis on computation, you guys learned quite a bit about matlab in QEA; mathematica -> good at handling symbolic differentaitation and math, boat module: quite good at visualizing parameter curves and stuff like that, think there were some points in robo module where symbolic math in mathemtica would've been simpler, matlab is faster, good at doing LOTS of calculations, for something like faces module, that's matlab's bread and butter, wouldn't want to do that module in something, could potentially do it in python, probably a bit harder, not as much familiarity with fall semseter, but lots of motion related things that mathematica might be better for, but matlab is great for visualization",
,What computing skills would you like your students to have going into your classes?,"I think for eiter I'm perfectly happy with little to none, one of the things we sholud focus on recognition that students come with very wide arrays of computing background, that's okay, it really is up to teaching those first classes for us to recognize ppl aren't coming in with programming background, ISIM -> could do better with filttration, data visualization, thought QEA did a decent job scaffolding, seemed pretty okay for the most part, there were struggles, REMINDER: debbuggers in QEA, that raises a good point, debugging skills are something that is important, maybe doing some intentional instruction around how to get your code working: setting breakpoints, making lots of variables visable, making sure variables aren't hidden in functions, a lot of these things you learn from pain and suffering, I spend a lot of time helping students debug code and often times it's usually around if you were better at structuring things it would've been easier to catch, good to write in sections, document code, etc",
,"Where in your class would you like to utilize computing, but don't? What's keeping you from doing so?","not sure that I'm sure yet, need more exp with curriculum, I think there were a few times in QEA there was a lot of times people did things by hand, but ppl could've done it in matlab and save a ton of time, easy to go back and redo things, but there's a perception coming from high school where you have to show everything by hand, but in the real world, you would never do that in practice",
,,"main thing I've known -> been part of teach access group, my interaction with that has been valuing accessibility more than the cs side, but the evolution of that group was people from big tech companies saying we have real talented people but with no exposure to accessibility practices, but everyone should have some knowledge of accessiblity so it's incorporated into new products, so these tech companies: there's a need for accessibility built into products at the START, going back and adding them is difficult and costly, they don't want someone to make this really awesome app and the bad guy accessibility people to tell them to go back and fix all these things, you want accessiblity to be something you think about, it's part of good process, goal of teach access is for people to come in with base level of knowledge, they should at least know the basics, and different things that go into desinging accessible websites and things, how would this work if user uses a screen reader, teach access is industry academia partnership solving that, that's mainly my interaction with computer science programs, and accessibilty is just somethign I care about, not that I don't care about computer science",
,,lia mendelson,