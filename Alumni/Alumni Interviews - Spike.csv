,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"work at Tigera, silicon valley start up, work on software infrastructure for network security, software engineer, mostly individual contributor, some design and architecture",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","this is what i do, write software that's designed to run in big disttributed cloud environments, worldwide distributed applications, software for managing policy and applying it to network communcaitons, keeps hackers",
,How do you utilize computation in your work?,,
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"interpret that as career: likely to spend less time writing code, as career progresses, as you move up into positions of responsiblity, spend more time thinking about software at higher level, intend to stay in software and stay as technical contributor, as job: don't expect amount of software that people are working on will change over time, tools will be developed for it, but it allows people to do more, not spend less time; that has been turned into increased productivity not decreased",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","got ac ople of sepcific memories: 1. freshman engineering cohort-> physics computational simulations with machine shop to build, building rockets that you make out of soda bottles, had a task of being able to simulate the flight, did it all in matlab, remember writing very naive big messy chunk of matlab code before learning more details,2. softdes -> a lot of what we spent time with was about structuring code, object oriented software design, how to write functions, building functions -> use those principles basically everyday; mostly worked in class on software things, took self study where I wante dto learn about AI, so I got a textbook that was recommended, etc, worked my way through that independently",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"left Olin, went to do PhD in anatmoic physics to work on quantum computation, working in physics lab, machining things, building experiment, computer helping run experiment, working on experimental control system, analyzing data, lots of this was self taught; came to Olin with interest in computing, majored in ECE, not interested in hardware, but then got interested in quantum computation, don't have large scale quantum computers, had to be phycist to work on them, ",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","when you're hiring sr engineers, you look for both, when hiring people directly out of undergrad, expect not a lot of either, just looking for people who are bright and interested, have some basic bits of content and skills, skills take off much faster, important in early part of career in computing, people start to get specialized and content starts mattering more, but people hit the reset button on careers alot, skills carry over, content doesn't",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"in current job: basic object oriented design software, didn't get enough of understanding and practicing collaborative workflows, not much of a chance to contribute to projects that had a lot of developers in a sustainable way, which is what you do in industry a lot, understanding source control, code reviews, most people learn these things on the job; we care alot about distrubuted systems and parallel processing, concurrency -> different strategies for dealing with that, mostly in realm where computers had 1 or 2 processors, mostly thinking about single threaded performance, things have changed a lot, even phones have multiple cores, being able to write software and deal with multiple processors workign on same data is quite an interesting area of software design, how do you establish consistency with distrubted systems, emergent behaciors show up there",
,,"first read email -> considering advanced topics in computing, trying to reconcile this with usefulness for all majors",
,,"quantum computing is a good example of intersection w/ other fields: mostly company was hardware company trying to build working quantum hardware, most people on team were machinists, phycisists, I was a software engineer, responsiuble for building software tools for helping these people, storing data, making it wasier to pull data, and analyze it, if you're a small team of software engineers in a company that isn't in software, building internal applications that lets company operate smoothly, not many companies that don't develop heavily on software, software engineers help businnesses by buildign internal software applications",
,,"there is a lot of appetite for investment in new companies that are about software, build an app, make a ton of money, just fro astraightforward perspective, they fit together, for any technology company getting started, they basically all have software components to what they do even if they are not primarly software, like SpaceEx, they have a really impressive team of software engineers to manage the whole thing, have their own internal tools that the build for inventory, different stages of production, etc, in order to do they're job, one company has internal software teams to do things differently, understanding how software engineering teams work is important for entrepreneurs, understanding what software is capable of and isn't is helpful; if there's a problem, they'll know if they can solve it, if they need to hire someone, if it's impossible, knowing what's easy, hard and impossible",
,,companies making autonomous cars and others know that they need ,
,,"we all imagined that robots were relatively compact and it would be autonomous without network , but reality that we've seen is that driverless vehicles is that the only reason they work is that they're fed lots of data and the robots send data back, tip of the iceberg in terms of robots, which are highly connected to data centers",
,,"what I didn't realize in undergrad was how important collaboration is, both collaborating in teams of software engineers, breaking down software problems, conflicts, etc, AND learning how to talk about software to people who aren't software engineers, epxlaining how things sare done to them, being able to have them describe problems in a way that allows you to make progress on them, oftentimes get conversations with people who have problems written abstractly from software, not sure how software could help, stuff that we deal with is largely about security, even if versed in security, not gonna know what software will do to make anything better, that level of communication is very important ",