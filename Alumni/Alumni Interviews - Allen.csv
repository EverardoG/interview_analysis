,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"work at GE, been here since I graduated, five years, but moved around a lot within GE, started in Edison leadership program at Power and Water in GE, would move teams and locations, first year was gas turbine control systems in SC, next rotation was wind turbine contorl, then third rotation was software, rotation was working on analytics center for turbines, starting to write software for infrastrucutre, side project: writin g analytic in matlab to detect combustion failures, now working in bay area, that rotation was writing software for renewables, sloud software solutiosn for wind turbine, expoect weather to be this, wind to be this, -> does analysis with this, started wroking with Spark and Python, now moved onto new team working on platform side Predicts Edge, now working in internet of things, how everything is connected, GE wants to do this for industrial machines, getting data from these machines into cloud to get them to work better and detect failures before they happen, worked on that platform through Edge, we work on software that sits next to those assets, collect data from sensors, analyze before sending to cloud, managing devices, not actual turbines, get info about device through edge, device managamnet, enabling connection of industrial assets to cloud",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","previous team wouldl make mroe sense to talk about-> renewable software solutions, there was a matlab analytic we run on a server on someon's desk, it would take hours or days to run, pulled data for wind turbine site, used that as a baseline, calculated likelihood of certain power outputs given inputs they had, I converted this to python, sent it to spark, this run a lot faster and more efficiently, also changing analytic to calculating results for each turbine, the would be the most computational work I've done in working with data, optimizing from days to minutes; something i'm doing now: we work on cloud services, what we're doing at the moment is figuring out managing all these different evices, want to scale to millinos of devices, weeing where we are and how to imporve, writing scripts to gather data on how many things we can update at once, how can we improve scaling our services, queue up all these different tasks, customers see all these successes, we want o space it out to perform over time with 95+ success rate",
,How do you utilize computation in your work?,"pretty common for computation to play a role in engineering -> need to justify what you're doing, we can make this better, but how much better, why, what's wrong now? what difference did your solution make?",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"I think at least on my team, I would expect more computation over time because int eh begginging your buildign things out, and we've been focusing on scaling up to handle more, when you get this point, you're running al ot more performance tests, reliability tests, figuring out what features are being used by customers, making more data driven desicisions, we're kind of at that point in our product, using these computations to help us decide wehre to go",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","took specific computation courses before: computational probstats w/ allen downey, that was the most computationally extensive course I took, but I don't really remember what I did at Olin, software design didn't involve a lot of computation, more compsci fundamentals.... what did I do? took a lot of economics, design courses, did circuits, did more circuits and computer hardware courses, not regular compsci courses, in terms of computation, I haven't done it in the sense of what I'm doing today, when you're working on projects and prototypes, you're testing things as you go, unless your course is focused on data manipulation, unless it was something specific, computation was not a big part of what I did at Olin; more computational classes at Olin: I would've enjoyed it more, did take a couple in grad school, data and visualization analytics, it was fun. if there was probably more computation type courses, just myself looking back and what I enjoy doing now, I think data science would have been pretty cool and a lot of fun, stuck to ECE any way and ended up here --> it would have been nice if there were more data driven courses, which there are more of now; poe --> a lot of it was less focused on software aspect of things, a lot more meche or ece focused; think it would be cool to have computation or ml type courses that are project based, took a course in grad school expecting it to be project based, my course was literally theory math and proofs, didn't feelt that useful, courses like that would be a good fit: project based is good",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"most of my computing learning has come from on the job or through grad school, took foundational courses at Olin, took softsys, but didn't do FOCS or other advanced courses, nothing at wellesley, not a strong foundation for ds and alg, that was definitely something that I needed, decided to pursure a more computational graduate degree, so I can learn in a more structured environment, that's when I got more of my compsci knowledge, not a full cs degree, mash between a lot of things, that's where I got most of my theory, then a lot of on the job learning, comfortable talking about waht I worked on, but solving theoretical graph problem, that's soething I would have to study for, on the job it's mostly trying things out, reading a lot, online papers, blog posts, learning from others, code reviews, giving code reviews can be good, not just recieving them, that's probably most of my learning; before: a little bit, took summer middle school robotics stuff with java, AP CompSci in high school early, didn't do any programming after that, knew basics but didn't touch java again until about 4 years ago, didn't do uch computational programming stuff beyond that, mostly math and science, no robtics clubs in higyh school",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","has to be a balance, more important to know the skill than the knowledge, I think the skils part is what everybody sholud know, know how to design and how a system works without specifc impelmentation in mind, I DO think it's important to have one language you can implement that in, language you can always learn, companies know that, people know that, unless you're working for specific start up that can olny use this one language, but most of the teim the langauge doesn't really matter, if you just know python without the skills, you can't really do anythign",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"does depend on project, foundational compsci work, threading, desicsions that you make, what impacts they have, optimization, space usage, that's probably most important, it's pretty important to know that there are multiple answers to the sameproblem, being able to articulate tradoffs between solutions would be most improtat, a lot of times coworkers come up with solution but it doesn't really work, now they have a hammer and everything is a nail, that's also a skill that comes over time with experience, but foundational concepts I think more complex concepts, my thought is if you know that basics, you can use that knowledge to be able to learn or understand more complex concepts, start off with something small, and now you can look at a system at a higher level",
,,"pretty important to say that everyone should have one language that they're comfortable in, one lanugage they have expertise in, but the concepts are what really matters, if you can implement something in one language that's good enough, a lot of the work we do is different than what you work on in school projects, a lot more quality assurance testing, spending a lot of time doing design and iterations, logging, even internationalization, not things you really think about for school project that's a prototype, all those things you''ll learn on the job, a lot of those things you learn on the job, I would try not to focus  on that, as anew grad no one expects you to know that stuff, plus companies do that stuff in all i=different ways, knowing git or something liek that is ipmortant to know, you should know that",