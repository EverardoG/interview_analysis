,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"systems engineer, hardware focused, lots of ties into embedded software, looking at high level algorithms, my team at company, robotics consulting firm, work for hire for solving specific problems for specific companies, where I am going: one of the unique things that we do is ; startover: systems engineer, mostly deal w/ hardware, interface a lot with software folks, gotta get certifacites for things, need to have some sort of say in software algorithms and stuff, like high level convos are important, don't get down in nitty gritty of how things work, been working with oliner intern on how to create your own distro of linux to get backup to get machine up and running, all useful things, those are sort of the things you pick up along the way, my role is more of a facilitator, but i have to be fluent in these discussions, that's a sweet spot for a lot of oliners, that's sort of where I lie, we're building a robotic ???, my team is doing the autonomy for it, my role is to make sure that we have a product that is producable at the end of the day, can we give the hardware to the client and will it function the same?",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","one of the most frequent times using computation has been evaluating sensors, they're trickier, try to say oh I have a test matrix with all these things in it, really hard to detect people, gotta approx lighting conditions, characterize as much as you can on the bench, sometimes acquired with ros, serial interface, every manufacturer has its own device where you take the info and put it into a csv file, then pull out the meaningful numbers, most of waht i do is from a high level, what are the interfaces between dfiferent groups, we have our own thinigs that we're developing, other teams edevlop other things, how do they interface ; interface control document",
,How do you utilize computation in your work?,"no direct insight, don't directly touch any of this, but we have a cloud based system that aggregates different faults and things, we can skim through and pull out different events from sensors on machine, how many times that the machine say ""i dont know what's going on"" etc, have oliner who just graduated, he developed lots of our infrastructure for data, how to sort through data to figure out improtant problems to tackle, how do we take all this data, sort it, and then have results that we can display on a live interface;",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"my particular case on managment path: less comoputational as time goes on, someitmes I wish i was more computational, COO was whipping out ruby to do a ton of visualizing, but there was too much start up energy for me to get started, people will often build prototypes without thinking of scalability, someone else is going to have to use this code, every six months someone has to go to a trade show with this camera, and no one has a laptop that works with the camera, so i tasked an intern with developing a working distroubution image that could be uploaded to another computer and get it up and running, so she made a webapp and did all these things to make it work, so that's kind of a cool thing, that's fun for her because it's not her sandbox, but because she's right next to Carl Moser, it's pretty easy for them to keep going, I usually have enough software knowledge to point them in the right direction, Emily Koeher, isaac, katya, christina",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","everyone touches modsim, modsim: hard part for me: there's a lot of syntax you have to get past to be able to make the simulation, there a lot of ways to hink about software and it will result in something different, I understood the diagrams and stuff, i had taken lots of roboclasses, then taught myself ptyhon to pass software design, got stuffed into ros every so often, lots of weird churn and tangents of things i learned",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"Grad school: software class: software design (but not olin): they teach industry standard, everyone knows how to use these interfaces, you think about how to piece code together, helps think logically how does this all flow?, at what frequency does data get passed, all these different modules you can develop, implementation side was always a bit more difficult, i was there to supervise and ping with stupid questions every so often, beyond that a lot more matlab focused, you plug in these numbers and you have this motion these trajectory plans, what happens? interesting thing about software class was learning what design patterns were, learning how real software engineers talk, you don't walwyas learn the right terms at Olin, so other enigneers dont trust you because you cant speak the language, people then think you're full of shit and wont listen to you, one of my friends who went to undergrad: ""It was really similar to how my team is organized now"" -> theres a person in charge of fleshing out bugs, workign thorugh moduls, whole scrum methodology, release process, how do you make releases? how do you act as a tester? all these different hings, how do you do regression testing for instance? dont wanna release code where the robot has a new feature but no longer works, back to me: we didn't have a standardized flow so customers were pulling branches that weren't workign, can't develop in parallel with peopel who are software engineers if yopu dont have a standardized release process",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","spent a long time discussing this: one of the hardest things: at olin its baised towards teamwork, management, especially as woman at olin i never dove into hardcore tech part because I was doing mostly management stuff, i did a lot of system level stuff, think one of the trickiest parts is that olin crafts a lot of intangible skills like colaboration, you need to cross that barrier and you need to have enough of a skillset before peopel care about intangible stuff, you're there as a tester, to go out with the machine at 5 am and drive it around a shop it around, you better be on the ball and be excited when starting, you're spot isn't in the center unless youve been doing that years and years",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"high level: finding good entry level folks you can trust is very difficult, i do phone screeen almost once a week, i would read ten to twenty resumes a day, it's very obvious from just reading someones resume if they will bea  good fit, also very obvious with phone screening, and if you post something on your resume, be ready to talk about, its been pretty challenging to find peopel with right backgroudn to work at my company, folks with good debugging skills, good practices, but htere are a lot of thing syou have to start off with first, C++ is a prereq to get in the door for software people, is it fair to hire engineer who doesn't know C++ who's experienced as not a programmer? different standpoint: depending on where you fall in: you want potential: I want them to have a good attitude, and how much have you just touched, how much do you know about it? what sort of things would you do dfiferently? why would you choose a certain processor over another? tons of questions you can go into and poke around, as an entry level: its awesome if you can do more than tread water, aweseom if they can really show you what they're talking about, it's not so much how much you know, it's how much have you retained, how much did you pick up on, how do you feel in our conversation, there was one person who was tired by lunch and taht wasn't gonna work, endurance level with high intensity is good, oliners can fall down on articulating the same language as everyone else: how do you become a trusted commidoty? how do you prove you know what you're talking about?, it's a value proposition",
,,"lots of Oliners live nearby, about 9 currently in the building where adela works, very startup focused",
,,"i tested out of software design, my software was very ad hoc, class of 2014, fairly ad hoc at quite a few things, i was a poe ninja, i loved poe, my most computational heavy class was comprobo because Paul finally entered who had a really cool class, I was tyring to build a robot with kinect, making my own walle, i didn't have a clear understanding of how software stuff work, getting stuff to work was good, reading C++ was hard",
,,"did you ahve any exposure/exp with software before Olin: computing ish stuff was like you had to take a class in excel, which was great except I forgot most of the shortcuts so it was useless, I was on a FIRST team in high school, it wasn't until I got to olin, you're telling me I canjust put math together and then model systems and understand what's happening, a lot of people do analyses like what we did, but on a different scale, engineering economics -> how do you read a profit loss statement to understand if you're taking too much risk with your company, ways o fapproaching math in away that you can model",
,,"robo class: robo1: dave robots 101 with tugboats, series of 3 sharp irs and steering simple state machine, robo2: specific labs that were harder, my project was building a robotic sailboat for 500 bucks so high school team could make it work, robo3: here are the resources: what do you want to do that's paper worthy? I put together kinect with arm and treadmill, and the robot would play tetris on the treadmill with 3d printed pieces, and then comprobo happened, my SCOPE project was developing heterogenous autonomous system, we had a whole bunch of things to make that go, that summer fafter scope I worked with dave to make prototype for locus robotics, paul's class has been most useful from high level, ihave enough knowledge to carry on a conversation and learn more, I have a frame that i can build off of, need to have that frameowrk and feel confident enough to pursure solving your own roblens/ questions",
,,have practical focus and you'll be fine,