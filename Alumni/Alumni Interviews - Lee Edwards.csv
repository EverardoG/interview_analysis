,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"start up investor -> not a programming job, was a ME for i robot ,and also did webdev for another place, sidetour start up: all software, worked at Groupon, most recently CTO, occasionally wrote code, but mostly management, still write a little bit of code, always playing with new tech, do the hello world of things; no idea what to do when graduated, attracted to systems, E:systems, didn't put much thought into it, always interested in management, probably like a year or two into iRobot, built software for fun on the side, spending so much time writing software at home, decided to get paid to do, entreprenuership stuff -> actively hostile towards it, then slowly working in industry entrepreneurship, always been kind of excited for what I'm moving into ",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","for working on venture capital, raise money from investors, I invest for people into companies, a lot of people do modelling for what their fund should look like, probability distribution of bussinesses doing well, monte carlo simulation: sort of like running a trial, you write a function that takes no inputs and just returns heads or tails, then run that 50 times, that's a monte carlo simulation",
,How do you utilize computation in your work?,"didn't write any software for iRobot -> not true, last thing I did was start up division within iRobot healthcare, some prototyping with voice module, did a demo for Roomba io; excel spreadsheets in day to day work, when I'm assessing a company, wanna figure out if team is good, market is big, making money?, all these things, technical diligence matters, get a technical person to talk to technical people and see if they know what they're talking about, getting insight into software company by testing company, some amount of this",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"less computational -> nevermind probably same, i dont know, trying to keep skills less, I do a lot less code now; less in current job, probably doing less code things",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","did a self study with Allen Downey, did very poorly, not enough time or effort, all I really did was learn python; then did nonlin choas, a bit of matlab and compuational simulations, also sigsys with dianna dabby, sr yr did nonlinear, much more focused on learning things, and trying hard; did research project with Brian Storey, did a lot of matlab, numerical modeling of fluid dynamic system with e&m field applied to it, solution of charged particles flowing through channel, lots of ODEs becoming discretized, then standard linear algebra, running simulation, waiting forever; nonlin -> read seminal paper in field, one paper that really blew it up, basically just implement in matlab, lots of implementing papers in matlab, just kind of understanding mind blowing nature of systems",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"before Olin: started programming at 13, playing with qbasic, started by modifying games with computer, made some text based games, lots of dumb stuff, then got into html and building websites, yeah pretty much always doing that stuff; since Olin: lots of software for companies I worked for, built software managing children in foster care, got really good at software being a contractor for bigger company, important to have mentor and to be teaching yourself, you get pretty far teaching yourself, thought I knew everything, then started working with people who knew a lot more than me: doubled my knowledge in six months, learning by doing in guided way; mixing guidance + learning on own: always learning on own, have a network of people advising me on things, people say I should just join a big firm and learn from people, not my style, think at some point I'll probably join a big firm and wish I did earlier, do learn approach to everything, a lot of value in going through phases where you are teaching yourself and learning from other people, these happen independently in my experience",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","think that a lot of my hiring in earlier start ups is often about looking for potential, people who can learn quickly, assessing potential, big fan of that, something Pivotal does well, they have a very specific way they do softdev, good to start with fresh canvas; Pivotal interviews: if people like problem solving, how do they repsond to feedback, what questions do they ask, I see if people get defensive, want to invest in people who think things through, that's one way to do it, drive and ambition is another factor: takes a lot of hard work to get good at anything, looking for people willing to put in the work",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"ability to write code that does things is great, not everyone with cs degree, some people do only do theory, theory is a job somewhere else like a research lab, writing code that works is very important, so many different ways to get into software, okay to be super deep on one thing, also cool to be pretty broad, a bit of mobile, web, machine learning, broad basis of ml should be required for everyone, conversations that tech people at every company have have shifted in the sense of understanding domain, what is a model? training set? why does that matter?",
,,"machine learning book -> Practical Artificial Intelligence, Perez Castanillo, gives you just the right amount of theory",
,,cutting edge stuff is all around unsupervised learning,
,,"supervised -> you identify features, unsupervised -> you don't identify features, deep learning is fancy name for nueral net w/ multiple layers",
,,"you start w/ supervised learning because it makes it easier to understand unsupervised learning, might be interseting thing to try to skip, eigenfaces is probably unsupervised learning",
,,check if PCA is supervised or unsupervised machine learning,
,,"interfacing w/ hardware is interesting, amazon deeplens could also be good, pain in the but to set up though, but then you have a camera that can send video to cloud and you can do whatever you want with the data, ships with pre trained models so you can play with them, also works with Kerat and everything else that matters",
,,"automated testing is very practical, but could be boring to learn, could also do a bit of setting up servers in the cloud, projects section could take this on, a lot of projects could involve a cloud service",
,,heroku is great for education,
,,"could do some databases, something you always do in ml is deal with different data structures, basic sql (structured query language), no sql is a way to store blobs of json in memory, lots of pros and cons, could study the difference, basic sql is structured data, lots of parellels with object oriented programming, think of tables as class",