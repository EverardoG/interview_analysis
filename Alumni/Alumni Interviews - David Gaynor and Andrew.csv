,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"classadoo -> online coding classes, idea is that codeacademy, khan academy, etc is super cool, but thep roblem is that you'll inevitebly get stuck, so you need help in some way, the idea is that a teacher jumps in when something goes wrong, only when they're stuck, part of it is referral system from teacher ot students, teacher has dashboard for who to help, teacher is meant to be a friendly face, and validate suggestions of algorithms, which says who needs help and where they can go, fake a 1on1 experience on scale, and this has been automated only after teaching a ton ourselves,R: david is CEO, dood is COO, expansion vs I do all the work, but we both write all the code, our friend and design consultant, it's like we're making a video game with a ton of realtime updating and other stuff, it's more like making a game, lots of UI design problems; designed initially as a way to make David more effective in the classroom and they realized they could make it an online course, started pretty sucky, but we wanted to sclae ourselves, and that's where we went, all our classes are designed ourselves",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","spaceEx/ Twitter: using computation to deal with problems of scale, read a lot of tweets computation made it much higher scale, vehicle on spaceex full of sensors, technically different depneding on what they come through, ultimately because different people care about different things, there are a thousand channels of data, some sensors are at 45 kHz, we use computation to analyze health of the vehicle, number 1 innovation of space ex: manufacturing and measuring vehicle health; L: Big data is a huge thing, every company has data coming from all different sources, could be useful no matter what job you're in, Andy's job was to make data analyzable, scientists analyzing data wrote scripts to look at code, but they had to simple scripts to analyze the data, they're running all ranges of complexity of queries, wouldn't expect them to be able to make the platform to querey that data, but they had to think computationally to get what was in their brain running as a program, accross a range of disciplines: if I look at data and see that someone wrote off 6 dinners as a bussiness expense, I konw that's suspicious, and I can write a way of getting that information for all employees, programmer makes data usable, others work with data ta high level, use computational thinking for that, but you can also make a UI thing for these people",
,How do you utilize computation in your work?,"we write code a lot, higher level things: we have lots of data, we have like 3000 different sources of data coming in from students, that's how many listeners we have, if the student is past the first challenge, and their stuck for longer than 10 seconds, or had an error for 30 seconds, then send alarm to teacher saying this student needs help; algorihtm that determines htese things? can it learn? ideally yes, but that hasn't been needed quite yet, our biggest problem is filling up the classroom with 20 to 30 students, we are doign more bussiness and marketing right now, we had an intern investigating that sort of thing (learning algorithms), right now we're codifying things, find difference between person being frustrated or just thinking, algorithm is sort of determined by our gut, we change it when we notice problems",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"depends what roles we take on in the company, we'll try to outsource the computational stuff to engineers, it has gotten less computational because we finished the MVP, we write less code, and it's because we're happy with the product for the most part, now we're figuring out the human aspect of it, imagine that i was an engineer rather than a founder, it would be more compyutational because i find harder and harder problems as I go, as an engineer it's more comptuational over time, but now I'm not dinog that",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","tons of learning experiences: educational philisophy -> maximize chnage in individual, will encounter same situation and do somethign different, I got a lot of situations at oLin and did them differently, learning to code n stuff, problem ex: build a computer vision system for robot, I did it better the next time, biggest learning for me was teamwork stuff, working on a ton of teams, learning how to work well on a team, R: something I learned from Stuff of HIstory: thing that really changed me was the problems form teh teachers to come up with our thesis statement for next month's essay, something that seems interesting or smells fishy, but in an hour how am I supposed to come up with something unique? it felt wrong to propose a hypothesis without more info, so i learned the courage to comit to a hypothesis when doign research and just digging deeper when there could be nothing there, learn to commit to interesting question that might have nothing there, L: no one REALLLLYYYY knows what they're doing, people are used to it, then get to Olin and everybody fails everything, so iwas like oh no one really konws what they're doing, we all couldn't figure out different projects, ""no one knows anything"", programming for years and years before college and it wasn't that much an advantage at a point, it's about how quickly you can pick up and learn a new thing, one of our classmates: got to a certain point in his programming career where he felt like he could tackle any problem 2 yrs after college, you get to a point at which you feel like you can learn just about anything without another 10 years",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"before: none, tried to download microsoft game development platform, then saw the symbols, thought it was dumb , during: gonna be a meche! nvm after: easy to not learn specific stuff at Olin, learned a lot at SpaceEx about production stuff, like monitoring, you got a bunch of servers and you need to know the health of the servers, you gotta put in place all these python open source things that tell you when the CPU is too hot on your server, I just had to get teh demo done at Olin, everything is in the cloud now, production was something I learned more after, I learned to prototype in Olin, computation: studying interview questions, and then just more computational thinking, series of subtle experiences made it so I could learn to program, R: I learned a ton from the robotics PhD's around me at Uber, I got a lot of experience there",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
",,
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"being able to learn very quickly, and having a base in a programming language, maybe 2 or 3 years experience, experience is how many bugs you've run into in your lifetime, also communication and collaboration, if you think they know something but they don't that's a problem, but they should be able to say they don't know what's going on, just the character traits of sincerity, honesty, and good communication -> important for start ups, I need to be able to trust people, technical things transced boundaries of programming lang, omre about attitude and programming skills, ""having a good nose for waht to google""",
,,"David: 5 yrs, we both have worked for std make money tech companies, david did entreprenuership while dood at Uber, biggest project together has been Classadoo, we've been friends since starting at Olin, founder of olin js, have designed a computation course before",
,,"we went right from software design to making apps in webdev, it was like Olin js before olin js, that was the next course we took (webdev), it's softdes then webdev, which is the next hot thing",
,,"not computational but makes life better: firebase, makes it so that you don't have to teach databases, but you can share data accross apps, we could make a multiplayer game or chat with very little code, it's easy to set up, free, four functions you need to know, and it shows you relevant things you can do, make UIs that read in firebase stuff, you don't need backend stuff for this, it opens up lots of possibilities, sharing data or storing data doesn't have to be taught, it's about applying it, data is the one thing that underlies all the fields, also simulations, it could be a cool course where you do a flavor of the class, like here's a device that helps you get this data from a heat sensor, or here's a board you can plug into yoru circuit to figure out jitter from your monitoring circuit",