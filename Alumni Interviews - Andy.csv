,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"teaching high school for past 7 yrs, officially math teacher, also did electronics stuff, helped start frc team, last 6 yrs, amazed at how little I knew coming in, and then how fast I picked things up, came in totally clueless and then started figuring things out, that's been fun and all consuming, recently quit, am now doing mix of random things, part designing summer camps, build siege weapons and have a war, make little prank machines, goof around fun stuff for middle-high school where we teach a bunch of baseline engineering concepts, in a super fun summer camp way, I can see myself getting more into that, something to start in about a year, I have a mix of new time available not working, life's in a weird stage right now; ",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","algebra instruction: talk about functions and growht patterns -> use graphing tools, they have backend stuff, developed simulators in physics, did farm plots for how much water , fertilizer etc to give it, then it spits out how well you did, it teaches you how to do experimental design, in stats: ultimate frisbee simulator, simulates game of frisbee, plays out game, keep track of all catches drops, throws, and dumps it into spreadsheet, you want to identify what players will give you the most points, you're teaching the process of figuring out what makes the team good, we play the game to udnerstand how it works, but it's really a computation problem, robotics -> do lots of comptuation in programming, did a class that used arduinos for various small projects, basic computation going on there; wrote a lot of my own scripts, stuff i made, part of it is as a teacher: assumed I would be able to go out and find things, but I'm really picky, I see something that doesn't accomplish what I want it too, so I took a lot of inspiration from things, and got ideas, but almost always built my own curriculum and everything else, youtube channel has a ton of views because I just cranked out a lot of them",
,How do you utilize computation in your work?,"probably half of the time computation was used directly by students to accomplish some engineering goal, other half: used by me in order to make something for students that they could learn from, had a narrative, design, then would build out a tool to let them explore that in a hands on way; how became teacher: made up an independent study called meta Olin, a study of Olin but we did it through different perspectives or lens, we rotated through different professors, one week was systems perspectives, another week was lens of diversity, one as digital communications, mesh networks as a better way of sending signals, then from pedagogi perspective, and found connections between all these things, started getting interested in teaching and educational chagne, and olin itself was priming me for an interest in education, then took a year off focused on education, because there were others also taking the year off, we all worked on educational software, learning about major pain points in education, my next 2 years at olin were focused on software, did a side job teaching last couple years at Olin, grand challenge scholars focused on education, did various things, did a one year certification program after olin, not a masters, but enough to legally teach, then placed at awesome school randomly, my one year educaiton was two months of classes followed with 9 months of teaching, then got to continue teaching next year, educationwas really just anohter year of experience",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"significantly more right now -> different job, I really enjoyed enigneering type classwork more than math stuff, engineering was so much better, designing techy summer camps is somethign I'll be more focused on for the next bit",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","alot, first year: what is now QEA was ICB integrated course block, using matlab for simulation of physics, graduated as E w/ C, did softsys, focs, softdes, special topics software class, comparch: building up processor purely through logic gates, built up logic of entire CPU, working at various levels of the stack, cool to see full spectrum, didnt learn any part super well, but got understanding of whole picture; main takeaway? confident enough to do something by junior year, but i was bad, after taking full semeseter of stack of courses I felt way more confident, next summer did an internship at IBM doing software stuff, felt like I was able to be a significant contributor, did a good amount of programming for SCOPE team, in that sense: i felt like olin courses worked for me, right now I feel like I'm developing better pathways for getting started",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"before: it was a lot of figuring stuff out on my own, 6th grade built a website for little league games and update it every day, did it in raw html, then added javascript elements to make it more pgoramming, first successful thing: modifed a really simple thing in javascript, turned it into NCAA 64 bracket, it would store the values in teh background, then give that to pearl and stored it in plaintext file, then made it so that you could automatically compare it to master one and see how many points everyone got, my brother and I would run these 2 dollar tournaments with this thing, after: did some freelance work: some guy payed me to do stuff, did a year of that all python based, I was actually able to do some stuff right away, wrote those after graduating, then had a reasonably big wall of not doing much on programming side, more recently, proposed course on internet of things, designing products, and being able to pitcth them, introduced more arduino based programming, for FRC robotics: started out with labview, then switched to C++, realized that was also sad and painful, now on java, much better, now finding best frameworks to use in java, I was probalby the one that drove most of the programming until about 2 years ago when we got more mentors, so i guess frc was my programming outlet for htose couple of years",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","80 % skills, content knowledge absolutely has a place, will serve you long enough to get more content, maybe even 70/30, if you don't have enough content knowledge to do something useful, you're not going to want to learn more because you just can't do anything, I felt for a reasonable amount of time that i couldn't do anything useful, anything that wasn't building a webapp was a waste of time, in my world, all of the things I wanted to do involved that, for the most part that's still pretty true, even if it's more algorithmic based stuff, it needs to be useful and on the web so you can access it, I don't know that I was taught how to use an api in college, which makes me a bit sad, it was less useful in college, but it was a very established thing, took first version of mobileproto, gotta sell bussiness case of it, and build webapp for it, taught by several professors that are probably all gone now, felt like there was a lot of programming being learned, but not enough to do anything i watned to do, that gap was really hard, i wouldve learned the other things if i could jsut make some stuff, teaching modern web app framework and being able to prototype with it would ahve been super useful",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"web app development for sure, one thing is to think computationally, but that's more of a bussiness skills, it's teh quantitative reasoning, some random thing came up with olin grads: talked thorugh bussiness case of something, thinking through if something is a viable bussiness idea or not, that type of thinking is insanely valueable, use it a lot for entreprenuerial stuff: how do you value things?, actual comptuation skills: definitely being able to do some form of web development, you can handle inputs and then crank out outputs from that in a usable way, have it fire out apis, from a language content, you need javascript as much as people love to hate it, it's a giant hammer on the web and can do everything, my favorite hammer, other things: some familiarity with micro processors, interesting discussions: arch we know is  a fantastic base device, but for actual EE work, you need to graduate past that pretty quickly, and build your own board, and do your own rapid prototyping, would be good to make your own printed circuit boards, good thing to be able to do, for build your own laser tag camp, a printed circuit board will be a much stronger connection for everything, all you do is take a sheet with metal on it and take off the metal you don't want, same thing as engraving metal, not complicated at all, there's software that handles the tool pathing, you just drop click and move things around, doing it is easy, not necessarily the same as doing it well though, should be paired with programming aspect, how does it translate to the physical world, looking at htis from the perspective of a start up company, and want to get stuff done where programming is involved; anohter idea: build cheap tools for measuring things, like for a physics class, all the materials exist to do that, teaching how to program it, set up libraries to make it easy to learn it, I try to make code disappear into libraries for introductory stuff, abstraction is super important for teaching programming, what level you want people to interact with is important to think about, writing an API: how much exposure do you want peopel to have?",
,,"thing about abstraction: design decision where you have to understand users, one thing I try to do is abstract without hiding, good to have layer of abstraction for focus, BUT hood should not be latched, it should be easy to access documentation",
,,"from user design perspective: problem there was that users wanted different level of abstraction than they got, if I was in that first year, i would've needed that to pass the course, there's a couple lessons in that, hopefully becomes more visible",
,,grabbing data to feed into ml algorithms and also integrating it with data formats would be super cool,
,,"plan for class: love the goals of the class; framing computing as a literacy, contact Emily Ferrier, she would be very interested to know what's going on here, she might have some great ideas for how to make this work, we've talked a lot about improving olin students' literacies in things",