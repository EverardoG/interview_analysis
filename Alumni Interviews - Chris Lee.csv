,Questions,Ever Notes,Lydia Notes
Their job,Where do they work?  How long have they been there?  Are they in management or an individual contributor?,"working at Nitco, been working since 2015, day after I graduated, do a lot of backend work, studied backend and now I'm stuck there, so I wrap machine learning models, apis, services in general, work with python stack, we have reactgs and other things, all our stuff is hosted through microsoft, we use codeshift for ci and testing, and our stuff is versioned in github and git; for the most part, we have a research group that do actual ml, and we wrap htem on the backend, and then serve them",
How do they use computation,"Tell us a story about a time when you used computation in a job that you’ve had since you’ve been at Olin.
","besides obvious (my work), but use it a lot for git and github, we use slack to communicate a lot, recently: we found a tool that does that for us, that was super helpful, takes less tiem for code reviews; a lot of scripting for deployment stuff, building images, install dependencies, also a lot of utility scripts, not very interesting; if it's just sort of like quality of life scripts, we write those a lot, a lot of those are mundane tasks, if you were managing like more than 10 repos, it's hard to keep track of them, trying to figure out where's the branch, where's the head, so on, then there's other things where you rely on third party libraries; we take other peoples web stuff and making it better; my scripts are very technically focused, outside of work: written scripts to synchronize data from database to a google sheet, which is mostly for reference, but the biggest draw is making sure there was ONE source of truth, so I have my own database that syncs in, and a few data sheets that are locked to a few people; in that vein: you can do a lot of embedding with scripts in google drive things, like sheets, and docs; in work we have a lot of versions of things in google docs, we have a script that can track changes; we use Google Apps Script to use js for a lot of managing our ",
,How do you utilize computation in your work?,"automation of mundane tasks, stuff like triggering builds of your stuff and making sure they all pass, it's part of a greater pipeline, stuff you do with APIs are pretty useful, alot of them are in the form of bash scripts, lots of scripts are a one off thing, and then there's silly things, like chrome extensions, we have a lot of ml models, one hte things we did was a chrome extension wher eyou can just access all this stuff, then also twitter and reddit stuff",
,Do you anticipate your job becoming more (or less) computational over time?  Why?,"probably the same, as we go forward we plan on building our own stuff, the goal is to have everything automated, which would make it less computational for us, more permanent solution than one off scripts",
Experience with Computing at Olin and Elsewhere,"While at Olin, describe the learning experiences you had (both inside and outside of the classroom)","went into Olin with no background, starting off it was hard because I feel like when we took SoftDes, there was an expectation that you knew python, we had a visiting professor doing it, same experience with software systems, when Paul first started taeching softdes, he really got into and dedicated himself to it; I NINJAd softdes the semester after I took it until I graduated, I think a lot of teh other classes I took it, FACS, discrete, thsose were the only i was required to take, those I thikn at the time they taught fundamentals pretty well, not very applicable, a lot of the stuff that are more applicable you learn outside of class, which I learned through internships, I did a research project with Rebecca Christanson -> I wrote a python sim for that, which was my first time digging deeper into python, I learned the most just by looking at another studen'ts code, while I was there, a lot of experiences came from students spreading knowledge from internships",
,Describe any other learning experiences related to computing you had either before entering Olin or since graduating.,"before: only experience I had was using the computer, only thing I had was graphing calculators and excel, that's it; after: sort of a continuation of olin, just like with new problems weekly, definitely a lot more at the beginning, you just learn new things every day when you start, and that's an internal skill, you're always learning new stuff",
What skills do they look for in potential job candidates,"Skills versus content knowledge versus process
","think it depends on nature of class, student led classes are like skill-up, for classes at olin taught by professors, obviously not as in tune with current tech, so all they really can impart are comp sci foundations, like what's working at a basic level, which is important to learn new stuff, which is my attitude towards college as a whole, it prepares us to teach ourselves; one way or another you're forced to learn on your own at Olin, projects are crazy, prof can't help you alot, you dive down a rabbit hole, by the way classes are structured they do that; Richard (teacher of FACS) structures it more like classical approach, very interesting, not conventional skill class, but you learn skills and concepts; in this context of class: scripting in browser is helpful, you use it day to day, person focused on software realm: being able to manipulate things in browser will come into play at some point or another, that involves learning about the internet, you should understand html on high level so you can understand how to go after errors, understand how http works, what protocols means, what happens when you type in an html and get a website;",
,What kind of skills/ knowledge do you want people you’re going to hire to have?,"knowledge of the stack we use is good, working knowledge of python, reading code and understanding, gotta understand inner workings over time, first week: you can fix minor bugs in code base, because if you can't do that you can't do anything, but if you can do that, you can slowly begin understanding what's going on, need working knoweldge of version control, understand how corporate design works, like getting API specs, build it the way it's designed and test it properly, have it be not awful, being able to take that to code review and make it better",
,,"a lot of the projects in softdes are really hacked together, long scripts, and because it's an intro class, that makes sense, not sure there's much you can do, but since you're still learning for the half class in the first, it's hard to get into style or semantic stuff, or how to organize code; 1. debugging 2. scaling 3. contributing; when you're working, you're not gonna be making new stuff a lot, it's a lot of debugging, changing a few things, and scaling code up, that is the defintion of software engineering, softdes is more about just making your things work, as NINJAs we tried to put as much of that as we could, we used to give points for that separately",
,,"have people focus on middle part of learning, where actual thought goes in, not just making boiler plate code, that's the sort of scaffolding you should have, data formats is good, keep that in, what you guys wanna cover is foundational",